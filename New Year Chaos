// cach 1
// O(n)

void minimumBribes(vector<int> q) {
    int count = 0;

    for(int i = q.size() - 1; i >= 0; i--) {
        if(q[i] != i+1){
            if(i-1 >= 0 && q[i-1] == i+1){
                q[i-1] = q[i];
                q[i] = i+1;
                count++;
            }else if(i-2 >= 0 && q[i-2] == i+1){
                q[i-2] = q[i-1];
                q[i-1] = q[i];
                q[i] = i+2;
                count += 2;
            }else {
                cout<< "Too chaotic" << endl;
                return;
            }
        }
    }

    cout << count << endl;
}

//cach 2
// O(n^2)

void minimumBribes(vector<int> q){
    int count = 0;
    for(int i=0; i<q.size(); i++){
        if(q[i] - i - 1 > 2){
            cout << "Too chaotic" << endl;
            return;
        }

        for(int j=0; j<i ; j++){
            if(q[j] > q[i]){
                count++;
            }
        }
    }

    cout << count << endl;
}
