#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

// do phuc tap: O(n^3)
void cach1 (vector<int> a){
    for(int i = 0; i < a.size()-2; i++) {
        for(int j = i+1; j < a.size()-1; j++) {
            for(int k = j+1; k < a.size(); k++) {
                if(a[i] + a[j] + a[k] == 0) {
                    cout << a[i] << " " << a[j] << " " << a[k] << endl;
                }
            }
        }
    }
}

// do phuc tap: O(n^2n)
void cach2 (vector<int> a){
    sort(a.begin(), a.end());
    int l, r;

    for(int i = 0; i < a.size()-2; i++){
        l = i+1;
        r = a.size()-1;

        while(l < r){
            if(a[i] + a[l] + a[r] == 0){
                cout << a[i] << " " << a[l] << " " << a[r] << endl;
                l++;
                r--;
            }else if(a[i] + a[l] + a[r] > 0){
                r--;
            }else if(a[i] + a[l] + a[r] < 0){
                l++;
            }
        }
    }
}

bool timKiemNhiPhan (vector<int> a, int l, int r, int x){
    if(l>r){
        return false;
    }

    int m = (l+r)/2;

    if(a[m] == x){
        return true;
    }else if(a[m] < x){
        return timKiemNhiPhan(a, m+1, r, x);
    }else{
        return timKiemNhiPhan(a, l, m-1, x);
    }
}

// do phuc tap: O(n^2*logn)
void cach3 (vector<int> a){
    sort(a.begin(), a.end());

    for(int i = 0; i < a.size()-1; i++){
        if(a[i] > 0){
            break;
        } 

        for(int j = i+1; j < a.size(); j++){
            int total = a[i] + a[j];

            if(timKiemNhiPhan(a, j, a.size()-1, -total)){
                cout << a[i] << " " << a[j] << " " << -total << endl;
            }
        }
    }
}

int main(){
    int n;

    cin >> n;

    vector<int> a;

    for(int i = 0; i < n; i++){
        int temp;
        cin >> temp;
        a.push_back(temp);
    }

    cach3(a);

    return 0;
}
